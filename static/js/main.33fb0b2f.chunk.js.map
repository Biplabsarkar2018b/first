{"version":3,"sources":["components/Alert.jsx","components/Navbar.jsx","components/Textform.jsx","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","react_default","a","createElement","className","role","alert","type","data-bs-dismiss","aria-label","Navbar","concat","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","id","aria-current","onClick","toggleMode","htmlFor","placeholder","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","style","backgroundColor","color","rows","newText","toUpperCase","toLowerCase","t","document","getElementById","select","navigator","clipboard","writeText","split","length","App","darkMode","setDarkMode","_useState3","_useState4","body","components_Textform","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.33fb0b2f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    <div>\r\n    <div className=\"alert alert-success\" role=\"alert\">\r\n    {props.alert}\r\n    <button type=\"button\" className=\"btn-close\" data-bs-dismiss='alert' aria-label=\"Close\"></button>\r\n  </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                About\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-5`}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n              {props.mode==='light'?'Enable dark mode':'Enable light mode'}\r\n            </label>\r\n          </div>\r\n          <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nfunction Textform(props) {\r\n  const handleUpClick = () => {\r\n    // console.log('UpperCase was clicked');\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  };\r\n  const handleCopy = ()=>{\r\n    var t = document.getElementById('textarea1');\r\n    t.select();\r\n    navigator.clipboard.writeText(t.value);\r\n  }\r\n  // const handleFLClick = () => {\r\n  //   let words = text.split(\" \");\r\n\r\n  //   for (let i = 0; i < words.length; i++) {\r\n  //     words[i] = words[i][0].toUpperCase();\r\n  //   }\r\n  //   words.join(' ');\r\n  //   // let n = words.toString();\r\n  //   setText(words);\r\n  // };\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div className={`container text-${props.mode==='light'?'black':'white'}`}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}}\r\n            id=\"textarea1\"\r\n            rows=\"9\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={handleUpClick}>\r\n          Convert To Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-5\" onClick={handleLoClick}>\r\n          Convert To Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary\" onClick={handleCopy}>\r\n          Copy text\r\n        </button>\r\n        \r\n      </div>\r\n      <div className={`container my-5 text-${props.mode==='light'?'black':'white'}`}>\r\n        <h2>Your text summary</h2>\r\n        <p>\r\n          {text.split(\" \").length} Words, {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Textform;\r\n","import { useState } from \"react\";\nimport React from \"react\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\n// import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(\"light\");\n  const [text, setText] = useState(\"light\");\n  const toggleMode = () => {\n    if (darkMode === \"light\") {\n      setDarkMode(\"dark\");\n      document.body.style.backgroundColor = \"#212528\";\n    } else {\n      setDarkMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n    }\n  };\n\n  return (\n    <>\n      <Navbar title=\"TextUtils\" mode={darkMode} toggleMode={toggleMode} />\n      <Alert alert=\"In this site you can use textutils\" />\n      <div className=\"container\">\n            <Textform heading=\"Enter Your Text Here....\" mode={darkMode} />\n          \n\n        {/*<About/>*/}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}